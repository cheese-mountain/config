{
    "intelephense.environment.includePaths": [
        "G:/wordpress/plugins",
        "F:/spektra/wp-sites/intellisense/app/public",
        "F:/spektra/repos/spektra-form-plugin/plugin"
    ],
    "security.promptForLocalFileProtocolHandling": false,
    "security.workspace.trust.untrustedFiles": "open",
    "update.showReleaseNotes": false,
    "github.copilot.enable": {
        "*": false
    },
    "[cpp]": {
        "editor.wordBasedSuggestions": "off",
        "editor.semanticHighlighting.enabled": true,
        "editor.stickyScroll.defaultModel": "foldingProviderModel",
        "editor.suggest.insertMode": "replace"
    },
    "debug.onTaskErrors": "debugAnyway",
    "explorer.confirmDragAndDrop": false,
    "extensions.ignoreRecommendations": true,
    "[markdown]": {
        "editor.unicodeHighlight.ambiguousCharacters": false,
        "editor.unicodeHighlight.invisibleCharacters": false,
        "diffEditor.ignoreTrimWhitespace": false,
        "editor.wordWrap": "on",
        "editor.quickSuggestions": {
            "comments": "off",
            "strings": "off",
            "other": "off"
        }
    },
    "explorer.confirmDelete": false,
    "task.problemMatchers.neverPrompt": {
        "shell": true
    },

    // Remove base junk
    "workbench.tree.enableStickyScroll": false,
    "editor.stickyScroll.scrollWithEditor": false,
    "editor.stickyScroll.enabled": false,
    "editor.copyWithSyntaxHighlighting": false,
    "workbench.activityBar.location": "hidden",
    "workbench.statusBar.visible": true,
    "diffEditor.ignoreTrimWhitespace": false,
    "workbench.editor.enablePreview": false,
    "window.newWindowDimensions": "inherit",
    "diffEditor.renderSideBySide": false,
    "editor.snippetSuggestions": "top",
    "files.insertFinalNewline": true,
    "editor.minimap.enabled": false,
    "editor.lineNumbers": "relative",
    "editor.guides.indentation": false,
    "breadcrumbs.enabled": false,
    "scm.diffDecorations": "none",
    "workbench.tips.enabled": false,
    "editor.colorDecorators": false,
    "git.decorations.enabled": false,
    "workbench.startupEditor": "none",
    "editor.lightbulb.enabled": "off",
    "editor.selectionHighlight": false,
    "editor.overviewRulerBorder": false,
    "editor.renderLineHighlight": "none",
    "editor.occurrencesHighlight": "off",
    "problems.decorations.enabled": false,
    "editor.renderControlCharacters": false,
    "editor.hideCursorInOverviewRuler": true,
    "editor.gotoLocation.multipleReferences": "goto",
    "editor.gotoLocation.multipleDefinitions": "goto",
    "editor.gotoLocation.multipleDeclarations": "goto",
    "workbench.editor.enablePreviewFromQuickOpen": false,
    "editor.gotoLocation.multipleImplementations": "goto",
    "editor.gotoLocation.multipleTypeDefinitions": "goto",

    // Style config
    "workbench.colorTheme": "Catppuccin Mocha",
    "workbench.iconTheme": "catppuccin-mocha",
    "catppuccin.accentColor": "blue",
    "editor.fontFamily": "Dank Mono",
    "editor.fontSize": 16,
    "editor.lineHeight": 24,
    "editor.suggestFontSize": 16,
    "editor.suggestLineHeight": 28,
    "terminal.integrated.lineHeight": 1.5,
    "terminal.integrated.fontSize": 16,
    "editor.inlineSuggest.suppressSuggestions": true,
    "editor.padding.top": 16,
    "editor.cursorBlinking": "solid",
    "window.zoomLevel": 0.75,
    // "window.titleBarStyle": "native",
    // "window.customTitleBarVisibility": "never",

    // CSS
    "vscode_custom_css.imports": [
        "file:///C:/projects/personal/vscode/settings/style.css"
    ],
    // Vim config
    "vim.useSystemClipboard": true,
    "vim.leader": "<Space>",
    "vim.normalModeKeyBindingsNonRecursive": [
        // Rename symbol
        { "before": ["leader", "r"], "commands": ["editor.action.rename"] },

        // Capslock to Escape
        { "before": ["leader", "leader"], "after": ["<Esc>"] },

        // Indent using tab/S-Tab
        { "before": ["<Tab>"], "commands": ["editor.action.indentLines"] },
        { "before": ["<S-Tab>"], "commands": ["editor.action.outdentLines"] },

        // Navigate
        { "before": ["<C-h>"], "commands": [":bprevious"] },
        { "before": ["<C-l>"], "commands": [":bnext"] },

        // splits/panes
        { "before": ["leader", "v"], "commands": [":vsplit"] },
        { "before": ["leader", "s"], "commands": [":split"] },
        {
            "before": ["leader", "h"],
            "commands": ["workbench.action.focusLeftGroup"]
        },
        {
            "before": ["leader", "j"],
            "commands": ["workbench.action.focusBelowGroup"]
        },
        {
            "before": ["leader", "k"],
            "commands": ["workbench.action.focusAboveGroup"]
        },
        {
            "before": ["leader", "l"],
            "commands": ["workbench.action.focusRightGroup"]
        },

        // Save file
        { "before": ["leader", "w"], "commands": [":w"] },

        // Comment in/out
        {
            "before": ["leader", "c"],
            "commands": ["editor.action.commentLine"]
        },

        // Insert line above
        {
            "before": ["leader", "i"],
            "commands": [
                {
                    "command": "vim.remap",
                    "args": {
                        "after": ["m", "z", "O", "<Esc>", "`", "z"]
                    }
                }
            ]
        },

        // Insert line below
        {
            "before": ["leader", "I"],
            "commands": [
                {
                    "command": "vim.remap",
                    "args": {
                        "after": ["m", "z", "O", "<Esc>", "`", "z"]
                    }
                }
            ]
        },

        // Delete line above
        {
            "before": ["leader", "d"],
            "commands": [
                {
                    "command": "vim.remap",
                    "args": {
                        "after": ["m", "z", "k", "d", "d", "`", "z"]
                    }
                }
            ]
        },

        // Delete line below
        {
            "before": ["leader", "D"],
            "commands": [
                {
                    "command": "vim.remap",
                    "args": {
                        "after": ["m", "z", "k", "d", "d", "`", "z"]
                    }
                }
            ]
        },

        // Search word under cursor
        {
            "before": ["leader", "a"],
            "commands": [
                {
                    "command": "vim.remap",
                    "args": {
                        "after": ["/", "<C-r>", "<C-w>", "<CR>"]
                    }
                }
            ]
        },
        {
            // Sort selected lines
            "before": ["<leader>", "s", "s"],
            "commands": ["editor.action.sortLinesAscending"]
        },
        {
            // Transform to uppercase
            "before": ["<leader>", "u"],
            "commands": ["editor.action.transformToUppercase"]
        },
        {
            // Transform to lowercase
            "before": ["<leader>", "l"],
            "commands": ["editor.action.transformToLowercase"]
        },
        {
            "before": ["leader", "q"],
            "commands": ["workbench.action.closeWindow"]
        },
        {
            "before": ["leader", "h"],
            "commands": ["editor.action.showDefinitionPreviewHover"]
        },
        {
            "before": ["leader", "<Enter>"],
            "commands": ["editor.action.revealDefinition"]
        },
        {
            "before": ["leader", "f"],
            "commands": ["workbench.action.quickOpen"]
        },
        {
            "before": ["leader", "p"],
            "commands": ["workbench.action.showCommands"]
        }
    ],
    "vim.visualModeKeyBindings": [
        // Comment in/out
        {
            "before": ["leader", "c"],
            "commands": ["editor.action.commentLine"]
        },

        // Stay in visual mode while indenting
        { "before": ["<Tab>"], "commands": ["editor.action.indentLines"] },
        { "before": ["<S-Tab>"], "commands": ["editor.action.outdentLines"] },
        // Move selected lines while staying in visual mode
        { "before": ["J"], "commands": ["editor.action.moveLinesDownAction"] },
        { "before": ["K"], "commands": ["editor.action.moveLinesUpAction"] }
    ],

    "vim.insertModeKeyBindings": [
        // Navigate horizontally
        {
            "before": ["<C-h>"],
            "commands": ["cursorLeft"]
        },
        {
            "before": ["<C-l>"],
            "commands": ["cursorRight"]
        }
    ],

    // Prettier
    "editor.tabSize": 4,
    "editor.insertSpaces": true,
    "editor.detectIndentation": false,
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "prettier.arrowParens": "avoid",
    "prettier.singleQuote": true,
    "prettier.tabWidth": 4,
    "prettier.jsxSingleQuote": true,
    "[json]": {
        "editor.formatOnSave": true,
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[jsonc]": {
        "editor.formatOnSave": true,
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[typescriptreact]": {
        "editor.formatOnSave": true,
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[typescript]": {
        "editor.formatOnSave": true,
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[javascriptreact]": {
        "editor.formatOnSave": true,
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[javascript]": {
        "editor.maxTokenizationLineLength": 2500,
        "editor.formatOnSave": true,
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[css]": {
        "editor.formatOnSave": true,
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },

    // Use CLink terminal
    "terminal.integrated.profiles.windows": {
        "pwsh": {
            // "overrideName": true,
            "path": "C:/Program Files/WindowsApps/Microsoft.PowerShell_7.5.1.0_x64__8wekyb3d8bbwe/pwsh.exe"
            // "args": ["/k", "FULLPATH/clink.bat", "inject"]
        },
        "CLink": {
            // "overrideName": true,
            "path": "C:/Windows/system32/cmd.exe"
            // "args": ["/k", "FULLPATH/clink.bat", "inject"]
        }
    },
    "terminal.integrated.defaultProfile.windows": "pwsh",
    "terminal.integrated.fontFamily": "CaskaydiaCove Nerd Font"
}
