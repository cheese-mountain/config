{
    "intelephense.environment.includePaths": [
        "G:/wordpress/plugins",
        "F:/spektra/wp-sites/intellisense/app/public",
        "F:/spektra/repos/spektra-form-plugin/plugin"
    ],
    "security.promptForLocalFileProtocolHandling": false,
    "security.workspace.trust.untrustedFiles": "open",
    "update.showReleaseNotes": false,
    "github.copilot.enable": {
        "*": false
    },
    "[cpp]": {
        "editor.wordBasedSuggestions": "off",
        "editor.semanticHighlighting.enabled": true,
        "editor.stickyScroll.defaultModel": "foldingProviderModel",
        "editor.suggest.insertMode": "replace"
    },
    "debug.onTaskErrors": "debugAnyway",
    "explorer.confirmDragAndDrop": false,
    "extensions.ignoreRecommendations": true,
    "[markdown]": {
        "editor.unicodeHighlight.ambiguousCharacters": false,
        "editor.unicodeHighlight.invisibleCharacters": false,
        "diffEditor.ignoreTrimWhitespace": false,
        "editor.wordWrap": "on",
        "editor.quickSuggestions": {
            "comments": "off",
            "strings": "off",
            "other": "off"
        }
    },
    "explorer.confirmDelete": false,
    "task.problemMatchers.neverPrompt": {
        "shell": true
    },

    // Remove base junk
    "editor.acceptSuggestionOnCommitCharacter": false,
    "workbench.tree.enableStickyScroll": false,
    "editor.stickyScroll.scrollWithEditor": false,
    "editor.stickyScroll.enabled": false,
    "editor.copyWithSyntaxHighlighting": false,
    "workbench.activityBar.location": "hidden",
    "diffEditor.ignoreTrimWhitespace": false,
    "workbench.editor.enablePreview": false,
    "window.newWindowDimensions": "inherit",
    "diffEditor.renderSideBySide": true,
    "editor.snippetSuggestions": "top",
    "files.insertFinalNewline": true,
    "editor.minimap.enabled": false,
    "editor.lineNumbers": "relative",
    "editor.guides.indentation": false,
    "breadcrumbs.enabled": false,
    "workbench.tips.enabled": false,
    "editor.colorDecorators": false,
    "workbench.startupEditor": "none",
    "editor.lightbulb.enabled": "off",
    "editor.selectionHighlight": false,
    "editor.overviewRulerBorder": false,
    "editor.renderLineHighlight": "none",
    "editor.occurrencesHighlight": "off",
    "problems.decorations.enabled": false,
    "editor.renderControlCharacters": false,
    "editor.hideCursorInOverviewRuler": true,
    "editor.gotoLocation.multipleReferences": "goto",
    "editor.gotoLocation.multipleDefinitions": "goto",
    "editor.gotoLocation.multipleDeclarations": "goto",
    "workbench.editor.enablePreviewFromQuickOpen": false,
    "editor.gotoLocation.multipleImplementations": "goto",
    "editor.gotoLocation.multipleTypeDefinitions": "goto",

    // Style config
    "workbench.colorTheme": "Catppuccin Mocha",
    "workbench.iconTheme": "catppuccin-mocha",
    "catppuccin.accentColor": "blue",
    "catppuccin.italicComments": false,
    "catppuccin.italicKeywords": false,
    "editor.fontFamily": "Dank Mono",
    "editor.fontSize": 16,
    "editor.lineHeight": 24,
    "editor.suggestFontSize": 16,
    "editor.suggestLineHeight": 28,
    "terminal.integrated.lineHeight": 1.5,
    "terminal.integrated.fontSize": 16,
    "editor.inlineSuggest.suppressSuggestions": true,
    "editor.padding.top": 16,
    "editor.cursorBlinking": "solid",
    "window.zoomLevel": 0.75,

    // CSS
    "vscode_custom_css.imports": [
        "file:///F:/personal/config/vscode/style.css"
    ],

    // Vim config
    "keyboard.mapAltGrToCtrlAlt": true,
    "vim.useSystemClipboard": true,
    "vim.foldfix": true,
    "vim.surround": true,
    "extensions.experimental.affinity": {
        "vscodevim.vim": 1
    },
    "vim.leader": "<Space>",
    "vim.normalModeKeyBindingsNonRecursive": [
        // Got to last used editor
        {
            "before": ["leader", "l"],
            "commands": [
                "workbench.action.quickOpenPreviousRecentlyUsedEditor",
                "list.select"
            ]
        },

        // Bind Y to y$
        { "before": ["Y"], "after": ["y", "$"] },

        // Open new file with ctrl + n (useful for code running)
        {
            "before": ["C-n"],
            "commands": ["workbench.action.files.newUntitledFile"]
        },

        // Disable ctrl f
        {
            "before": ["<C-f>"],
            "commands": ["workbench.action.quickTextSearch"]
        },

        // Find & replace
        {
            "before": ["leader", "f"],
            "commands": ["editor.action.startFindReplaceAction"]
        },

        // Center after moving verticaly half page up/down
        { "before": ["<C-u>"], "after": ["<C-u>", "M"] },
        { "before": ["<C-d>"], "after": ["<C-d>", "M"] },

        // Insert cursor below
        {
            "before": ["leader", "j"],
            "commands": ["editor.action.insertCursorBelow"]
        },

        // Insert cursor above
        {
            "before": ["leader", "k"],
            "commands": ["editor.action.insertCursorAbove"]
        },

        // Comment in/out
        {
            "before": ["leader", "c"],
            "commands": ["editor.action.commentLine"]
        },

        // Rename symbol
        {
            "before": ["leader", "r"],
            "commands": ["editor.action.rename"]
        }

        // // Import module
        // {
        //     "before": ["leader", "i"],
        //     "commands": ["editor.action."]
        // }
    ],
    "vim.visualModeKeyBindings": [
        // Center after moving verticaly half page up/down
        { "before": ["<C-u>"], "after": ["<C-u>", "M"] },
        { "before": ["<C-d>"], "after": ["<C-d>", "M"] },

        // Got to last used editor
        {
            "before": ["leader", "l"],
            "commands": [
                "workbench.action.quickOpenPreviousRecentlyUsedEditor",
                "list.select"
            ]
        },

        // Find & replace
        {
            "before": ["leader", "f"],
            "commands": ["editor.action.startFindReplaceAction"]
        },

        // Comment in/out
        {
            "before": ["leader", "c"],
            "commands": ["editor.action.commentLine"]
        },

        // Paste over line without ovverriding yank register
        {
            "before": ["<leader>", "p"],
            "after": ["\"", "_", "d", "P"]
        },

        // Delete line without overriding yank register
        {
            "before": ["D"],
            "after": ["\"", "_", "d"]
        },

        // Move selected lines while staying in visual mode
        { "before": ["J"], "commands": ["editor.action.moveLinesDownAction"] },
        { "before": ["K"], "commands": ["editor.action.moveLinesUpAction"] }
    ],
    "vim.insertModeKeyBindings": [],

    // Teminal
    "terminal.integrated.commandsToSkipShell": [
        "workbench.files.action.focusFilesExplorer",
        "workbench.action.quickTextSearch"
    ],
    "terminal.integrated.profiles.windows": {
        "pwsh": {
            "path": "C:/Program Files/WindowsApps/Microsoft.PowerShell_7.5.1.0_x64__8wekyb3d8bbwe/pwsh.exe"
        }
    },
    "terminal.integrated.defaultProfile.windows": "pwsh",
    "terminal.integrated.fontFamily": "CaskaydiaCove Nerd Font",
    "workbench.editor.splitInGroupLayout": "vertical",

    // Prettier
    "editor.tabSize": 4,
    "editor.insertSpaces": true,
    "editor.detectIndentation": false,
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "prettier.arrowParens": "avoid",
    "prettier.semi": false,
    "prettier.singleQuote": true,
    "prettier.tabWidth": 4,
    "prettier.jsxSingleQuote": true,
    "[json]": {
        "editor.formatOnSave": true,
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[jsonc]": {
        "editor.formatOnSave": true,
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[typescriptreact]": {
        "editor.formatOnSave": true,
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[typescript]": {
        "editor.formatOnSave": true,
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[javascriptreact]": {
        "editor.formatOnSave": true,
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[javascript]": {
        "editor.maxTokenizationLineLength": 2500,
        "editor.formatOnSave": true,
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[css]": {
        "editor.formatOnSave": true,
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[php]": {
        "editor.defaultFormatter": "bmewburn.vscode-intelephense-client"
    },

    "npm.packageManager": "pnpm",
    "git.openRepositoryInParentFolders": "always"
}
